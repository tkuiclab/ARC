cmake_minimum_required(VERSION 2.8.3)
project(obj_pose)

## Add support for C++11, supported in ROS Kinetic and newer

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  actionlib_msgs
  actionlib
  message_generation
  pcl_conversions
  pcl_ros
  roscpp
  rospy
  sensor_msgs
  std_msgs
)
find_package(PCL 1.7 REQUIRED REQUIRED COMPONENTS 
	io
	registration
	segmentation
	visualization
	common
)

## System dependencies are found with CMake's conventions
find_package(Boost REQUIRED COMPONENTS system)


################################################
## Declare ROS messages, services and actions ##
################################################

## Generate actions in the 'action' folder
add_action_files(
  DIRECTORY action
  FILES ObjectPose.action
)
generate_messages(
  DEPENDENCIES actionlib_msgs std_msgs geometry_msgs
)

###################################
## catkin specific configuration ##
###################################
catkin_package(
  LIBRARIES actionlib
  CATKIN_DEPENDS actionlib_msgs message_runtime roscpp std_msgs geometry_msgs
)

###########
## Build ##
###########
# -- For pcl-1.8
#set(EIGEN3_INCLUDE_DIR "/usr/local/include/eigen3")
set(PCL_INCLUDE_DIRS "/usr/local/include/pcl-1.8")
set(PCL_LIBRARY_DIRS "/usr/local/lib")

# -- For pcl-1.7 
set(EIGEN3_INCLUDE_DIR "/usr/include/eigen3")
#set(PCL_INCLUDE_DIRS "/usr/include/pcl-1.7")
#set(PCL_LIBRARY_DIRS "/usr/lib")

include_directories(
  ${catkin_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS} ${PCL_INCLUDE_DIRS} ${EIGEN3_INCLUDE_DIR}
)
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})

## Declare a C++ library
# add_library(${PROJECT_NAME}
#   src/${PROJECT_NAME}/object_pose_estimator.cpp
# )

## Add cmake target dependencies of the library
# add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})

## Declare a C++ executable
# add_executable(${PROJECT_NAME}_node src/object_pose_estimator_node.cpp)


## Add cmake target dependencies of the executable
# add_dependencies(${PROJECT_NAME}_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})

## Specify libraries to link a library or executable target against

add_executable (object_pose_estimator src/object_pose_estimator.cpp)
#target_link_libraries (object_pose_estimator ${PCL_LIBRARIES} ${catkin_LIBRARIES} libpcl_surface.so libpcl_search.so libpcl_visualization.so libpcl_segmentation.so libpcl_features.so libpcl_filters.so libgomp.so libpcl_keypoints.so libpcl_kdtree.so libpcl_recognition.so)
target_link_libraries (object_pose_estimator ${PCL_LIBRARIES} ${catkin_LIBRARIES} )
add_dependencies(object_pose_estimator obj_pose_generate_messages_cpp)
add_dependencies(object_pose_estimator darkflow_detect_generate_messages_cpp)

add_executable (obj_center src/obj_center.cpp)
target_link_libraries (obj_center ${PCL_LIBRARIES} ${catkin_LIBRARIES})
add_dependencies(obj_center obj_pose_generate_messages_cpp)
add_dependencies(obj_center darkflow_detect_generate_messages_cpp)